#!/bin/bash

# Test Nginx theo nguy√™n t·∫Øc Elon Musk: ƒê∆°n gi·∫£n - Nhanh - Hi·ªáu qu·∫£

set -e

echo "üöÄ NGINX TEST - Following Musk Principles"
echo "========================================"

# Step 1: Start only nginx (lo·∫°i b·ªè kh√¥ng c·∫ßn thi·∫øt)
echo "üì¶ Starting nginx service only..."
docker compose up -d nginx

# Step 2: Wait for container (ƒë∆°n gi·∫£n tri·ªát ƒë·ªÉ)
echo "‚è≥ Waiting for nginx to be ready..."
sleep 5

# Step 3: Test health endpoint (test c·ªët l√µi)
echo "üè• Testing health endpoint..."
if curl -f http://localhost/health &>/dev/null; then
    echo "‚úÖ Health check: PASS"
else
    echo "‚ùå Health check: FAIL"
    exit 1
fi

# Step 4: Test HTTP basic response (thay v√¨ redirect do t·∫°m th·ªùi v√¥ hi·ªáu h√≥a HTTPS)
echo "üìÑ Testing HTTP basic response..."
HTTP_RESPONSE=$(curl -s http://localhost/)
if [[ "$HTTP_RESPONSE" == *"nginx-http-ok"* ]]; then
    echo "‚úÖ HTTP response: PASS"
else
    echo "‚ùå HTTP response: FAIL (got: $HTTP_RESPONSE)"
    exit 1
fi

# Step 5: Test nginx config syntax (tr√°nh runtime error)
echo "üìù Testing nginx config syntax..."
if docker exec vpn-proxy nginx -t &>/dev/null; then
    echo "‚úÖ Config syntax: PASS"
else
    echo "‚ùå Config syntax: FAIL"
    exit 1
fi

# Step 6: Test container health status (Docker level)
echo "üê≥ Testing container health..."
HEALTH_STATUS=$(docker inspect --format='{{.State.Health.Status}}' vpn-proxy 2>/dev/null || echo "none")
if [ "$HEALTH_STATUS" = "healthy" ] || [ "$HEALTH_STATUS" = "none" ]; then
    echo "‚úÖ Container health: PASS"
else
    echo "‚ùå Container health: FAIL ($HEALTH_STATUS)"
    exit 1
fi

echo ""
echo "üéâ ALL NGINX TESTS PASSED!"
echo "üí° Musk Principle Applied: Simple, Fast, Effective"
echo ""
echo "Next steps (t·ªëi ∆∞u sau khi c√≥ d·ªØ li·ªáu):"
echo "- Enable SSL certificate when ready for production"
echo "- Add HTTP to HTTPS redirect when SSL is configured"
echo "- Add load testing when traffic data available"
echo "- Add security headers validation when needed"
